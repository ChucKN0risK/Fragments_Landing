@charset "UTF-8";
:root {
  --color-white: #fff;
  --color-black: #000;
  --color-red: #fa4a4a;
  --color-blue: #202f55;
  --color-grey-10: rgba(0, 0, 0, 0.05);
  --color-grey-20: rgba(0, 0, 0, 0.1);
  --color-grey-30: rgba(0, 0, 0, 0.27);
  --color-grey-40: rgba(0, 0, 0, 0.4);
  --color-grey-50: rgba(0, 0, 0, 0.57);
  --color-lightgrey-10: #f9f9f9;
  --color-lightgrey-20: #e5e7ea;
  --color-orange: #d35400;
  --color-green: #27ae60;
  --color-purple-300: #bfa9f2;
  --color-purple-400: #9474dd;
  --color-purple-500: #7a57d1;
  --color-purple-600: #6032c3;
  --color-purple-700: #4300b3;
  --color-yellow: #f1c40f;
  --color-primary: var(--color-purple-600);
  --color-error: var(--color-red);
  --color-success: var(--color-green); }

.icon--facebook {
  color: #3b5998; }

.icon--twitter {
  color: #43bfe1; }

.icon--dribbble {
  color: #ea4c89; }

.icon--github {
  color: #171515; }

.icon--google {
  color: #db4437; }

.icon--youtube {
  color: #c4302b; }

.icon--linkedin {
  color: #3272bd; }

:root {
  --border-radius: 4px;
  --border-width: 1px;
  --base-padding: 1rem;
  --box-shadow-screen: 0px 64px 80px -24px rgba(0, 0, 0, 0.24);
  --max-content-width: 90rem;
  --header--main-height: 3rem;
  --padding-media: 1rem;
  --nav--main-height: 4rem;
  --input-height: 3rem;
  --single-form-width--tablet: 18rem;
  --single-form-width--desktop: 30rem; }

:root {
  --RobotoRegular: 'RobotoRegular', sans-serif;
  --RobotoMedium: 'RobotoMedium', sans-serif;
  --RobotoLight: 'RobotoLight', sans-serif;
  --font-primary: var(--RobotoRegular); }

body::before {
  background-color: #FCF8E3;
  border-bottom: 1px solid #FBEED5;
  border-left: 1px solid #FBEED5;
  color: #C09853;
  font: small-caption;
  padding: 3px 6px;
  pointer-events: none;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 100; }
  @media (min-width: 15.625em) {
    body::before {
      content: "mobile ≥ 250px (15.625em)"; } }
  @media (min-width: 30em) {
    body::before {
      content: "mobileLandscape ≥ 480px (30em)"; } }
  @media (min-width: 46.25em) {
    body::before {
      content: "tablet ≥ 740px (46.25em)"; } }
  @media (min-width: 61.25em) {
    body::before {
      content: "desktop ≥ 980px (61.25em)"; } }
  @media (min-width: 81.25em) {
    body::before {
      content: "wide ≥ 1300px (81.25em)"; } }

/*
 * Normalization
 */
audio:not([controls]) {
  display: none; }

button {
  overflow: visible;
  -webkit-appearance: button; }

details {
  display: block; }

html {
  -ms-overflow-style: -ms-autohiding-scrollbar;
  overflow-y: scroll;
  -webkit-text-size-adjust: 100%; }

input {
  -webkit-border-radius: 0; }
  input[type="button"], input[type="reset"], input[type="submit"] {
    -webkit-appearance: button; }
  input[type="number"] {
    width: auto; }
  input[type="search"] {
    -webkit-appearance: textfield; }
    input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
      -webkit-appearance: none; }

main {
  display: block; }

pre {
  overflow: auto; }

progress {
  display: inline-block; }

small {
  font-size: 75%; }

summary {
  display: block; }

svg:not(:root) {
  overflow: hidden; }

template {
  display: none; }

textarea {
  overflow: auto; }

[hidden] {
  display: none; }

/*
 * Universal inheritance
 */
*,
::before,
::after {
  box-sizing: inherit; }

* {
  font-size: inherit;
  line-height: inherit; }

::before,
::after {
  text-decoration: inherit;
  vertical-align: inherit; }

/*
 * Opinionated defaults
 */
*,
::before,
::after {
  border-style: solid;
  border-width: 0; }

* {
  background-repeat: no-repeat;
  margin: 0;
  padding: 0; }

:root {
  background-color: #FFFFFF;
  box-sizing: border-box;
  color: #000000;
  cursor: default;
  font: 100%/1.5 sans-serif;
  text-rendering: optimizeLegibility; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

button,
input,
select,
textarea {
  background-color: transparent; }

button,
input,
select,
textarea {
  color: inherit;
  font-family: inherit;
  font-style: inherit;
  font-weight: inherit; }

button,
[type="button"],
[type="date"],
[type="datetime"],
[type="datetime-local"],
[type="email"],
[type="month"],
[type="number"],
[type="password"],
[type="reset"],
[type="search"],
[type="submit"],
[type="tel"],
[type="text"],
[type="time"],
[type="url"],
[type="week"],
select,
textarea {
  min-height: 1.5em; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace; }

nav ol,
nav ul {
  list-style: none; }

select {
  -moz-appearance: none;
  -webkit-appearance: none; }
  select::-ms-expand {
    display: none; }
  select::-ms-value {
    color: currentColor; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

textarea {
  resize: vertical; }

::-moz-selection {
  background-color: #B3D4FC;
  color: #ffffff;
  text-shadow: none; }

::selection {
  background-color: #B3D4FC;
  color: #ffffff;
  text-shadow: none; }

[aria-busy="true"] {
  cursor: progress; }

[aria-controls] {
  cursor: pointer; }

[aria-disabled] {
  cursor: default; }

[hidden][aria-hidden="false"] {
  clip: rect(0 0 0 0);
  display: inherit;
  position: absolute; }
  [hidden][aria-hidden="false"]:focus {
    clip: auto; }

/**
 * High-, page-level styling.
 *
 * 1. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 2. Ensure the page always fills at least the entire height of the viewport.
 * 3. Prevent certain mobile browsers from automatically zooming fonts.
 */
html {
  overflow-y: scroll;
  /* [1] */
  min-height: 100vh;
  /* [2] */
  -webkit-text-size-adjust: 100%;
  /* [3] */
  -ms-text-size-adjust: 100%;
  /* [3] */
  font-family: var(--font-primary), serif;
  font-size: 100%;
  font-weight: 400;
  margin: 0 auto;
  text-align: left;
  -webkit-font-smoothing: antialiased; }

body,
html {
  width: 100%;
  margin: 0;
  padding: 0;
  color: var(--color-black); }

body {
  font-size: 1em;
  position: relative; }
  @media screen and (min-width: 46.25em) {
    body {
      font-size: 1em; } }
  @media screen and (min-width: 61.25em) {
    body {
      font-size: 1em; } }
  body.build-prod::before {
    display: none !important; }

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-bottom: 1rem;
  line-height: 1.2;
  font-weight: 400;
  transition: all cubic-bezier(0.22, 0.61, 0.36, 1) 0.3s; }

h1 {
  font-size: 2.0625em; }
  @media screen and (min-width: 46.25em) {
    h1 {
      font-size: 2.4375em; } }
  @media screen and (min-width: 61.25em) {
    h1 {
      font-size: 3.1875em; } }

h2 {
  font-size: 1.75em; }
  @media screen and (min-width: 46.25em) {
    h2 {
      font-size: 1.9375em; } }
  @media screen and (min-width: 61.25em) {
    h2 {
      font-size: 2.375em; } }

h3 {
  font-size: 1.4375em; }
  @media screen and (min-width: 46.25em) {
    h3 {
      font-size: 1.5625em; } }
  @media screen and (min-width: 61.25em) {
    h3 {
      font-size: 1.75em; } }

h4 {
  font-size: 1.1875em; }
  @media screen and (min-width: 46.25em) {
    h4 {
      font-size: 1.25em; } }
  @media screen and (min-width: 61.25em) {
    h4 {
      font-size: 1.3125em; } }

h5 {
  font-size: 1em; }
  @media screen and (min-width: 46.25em) {
    h5 {
      font-size: 1em; } }
  @media screen and (min-width: 61.25em) {
    h5 {
      font-size: 1em; } }

p,
a,
ul,
blockquote,
figcaption {
  font-family: var(--font-primary);
  color: var(--color-grey-50);
  line-height: 1.5; }

img {
  height: auto;
  width: 100%; }

button {
  cursor: pointer; }

::-moz-selection {
  background: var(--color-primary);
  color: var(--color-white);
  text-shadow: none; }

::selection {
  background: var(--color-primary);
  color: var(--color-white);
  text-shadow: none; }

.fade-in {
  -webkit-animation-name: fadeIn;
          animation-name: fadeIn;
  -webkit-animation-duration: 1.3s;
          animation-duration: 1.3s;
  -webkit-animation-timing-function: cubic-bezier(0, 0, 0.4, 1);
          animation-timing-function: cubic-bezier(0, 0, 0.4, 1);
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

@-webkit-keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

/* ==|====================
   Fonts
   ======================= */
@font-face {
  font-family: "RobotoRegular";
  src: url("../fonts/Roboto-Regular.woff2") format("woff2"), url("../fonts/Roboto-Regular.woff") format("woff"), url("../fonts/Roboto-Regular.otf") format("opentype"); }

@font-face {
  font-family: "RobotoMedium";
  src: url("../fonts/Roboto-Medium.woff2") format("woff2"), url("../fonts/Roboto-Medium.woff") format("woff"), url("../fonts/Roboto-Medium.otf") format("opentype"); }

@font-face {
  font-family: "RobotoLight";
  src: url("../fonts/Roboto-Light.woff2") format("woff2"), url("../fonts/Roboto-Light.woff") format("woff"), url("../fonts/Roboto-Light.otf") format("opentype"); }

.styleguide__title {
  text-align: center;
  margin: 3rem 0; }

.styleguide__section {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  padding: 1rem 0;
  overflow: hidden; }
  .styleguide__section:last-child {
    padding-bottom: 0; }

.styleguide__section__title {
  text-align: center;
  margin-bottom: 1rem;
  color: var(--color-blue); }
  .styleguide__section__title a {
    text-align: center; }

.styleguide__section__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-flow: column wrap;
          flex-flow: column wrap; }
  .styleguide__section__item--spaced {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-flow: row wrap;
            flex-flow: row wrap;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -ms-flex-pack: distribute;
        justify-content: space-around; }
  .styleguide__section__item--cards {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-flow: row wrap;
            flex-flow: row wrap;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -ms-flex-pack: distribute;
        justify-content: space-around;
    padding: 0 5rem; }
  .styleguide__section__item--typography, .styleguide__section__item--buttons {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
    .styleguide__section__item--typography button[class*="m-btn--"],
    .styleguide__section__item--typography a[class*="m-btn--"], .styleguide__section__item--buttons button[class*="m-btn--"],
    .styleguide__section__item--buttons a[class*="m-btn--"] {
      margin-bottom: 1rem; }

.styleguide__section__item--typography {
  margin: 0 auto; }
  @media (min-width: 15.625em) and (max-width: 46.24em) {
    .styleguide__section__item--typography {
      padding: 0 1rem; } }
  @media (min-width: 46.25em) and (max-width: 61.24em) {
    .styleguide__section__item--typography {
      padding: 0 2rem;
      width: 35rem; } }
  @media (min-width: 61.25em) {
    .styleguide__section__item--typography {
      padding: 0 2rem;
      width: 45rem; } }

.headings,
.text-wrapper,
.lists {
  margin-bottom: 2rem; }

.text-wrapper p {
  line-height: 1.5; }

@media (min-width: 15.625em) and (max-width: 61.24em) {
  .text-wrapper p + p {
    margin-bottom: 1rem; } }

@media (min-width: 61.25em) {
  .text-wrapper p + p {
    margin-bottom: 1.5rem; } }

.text-wrapper--thin {
  font-weight: 200; }
  .text-wrapper--thin h5 {
    font-weight: 600; }

.paragraph__subtitle {
  margin-bottom: .5rem;
  margin-top: 1.5rem; }
  .paragraph__subtitle:first-child > p {
    font-weight: normal; }

.lists {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  width: 100%; }
  @media (min-width: 30em) {
    .lists {
      -webkit-box-pack: start;
          -ms-flex-pack: start;
              justify-content: flex-start; }
      .lists .list-wrapper {
        margin-right: 2rem; } }

.links {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  width: 100%; }

.styleguide__section__item--media .service-pros {
  margin-bottom: 2rem; }

.styleguide__section__item--media .service-presentation .media--presentation-item:nth-child(odd) {
  background-color: var(--color-lightgrey-20); }
  .styleguide__section__item--media .service-presentation .media--presentation-item:nth-child(odd) .media__title {
    color: var(--color-blue); }
  .styleguide__section__item--media .service-presentation .media--presentation-item:nth-child(odd) .media__figure {
    margin-right: 0; }
    @media (min-width: 61.25em) {
      .styleguide__section__item--media .service-presentation .media--presentation-item:nth-child(odd) .media__figure {
        -webkit-box-ordinal-group: 2;
            -ms-flex-order: 1;
                order: 1;
        margin-left: var(--color-padding-media); } }

.styleguide__section__item--media .service-presentation .media--presentation-item:nth-child(even) .media__title {
  color: var(--color-red); }

.styleguide__section__item--media .teams-wrapper {
  margin: auto; }
  @media (min-width: 46.25em) and (max-width: 81.24em) {
    .styleguide__section__item--media .teams-wrapper {
      width: 80%; } }
  @media (min-width: 81.25em) {
    .styleguide__section__item--media .teams-wrapper {
      max-width: 65rem; } }

.styleguide__section__item--form {
  max-width: 30rem;
  margin: auto; }
  .styleguide__section__item--form .input-wrapper,
  .styleguide__section__item--form .checkbox-wrapper,
  .styleguide__section__item--form select {
    margin-bottom: 1rem; }
  .styleguide__section__item--form .radio-wrapper {
    margin-bottom: .5rem; }

.styleguide__section__item--alert {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }
  .styleguide__section__item--alert .alert,
  .styleguide__section__item--alert .alert--success,
  .styleguide__section__item--alert .alert--error {
    margin-bottom: 1rem; }

.styleguide__section__item--footer {
  margin-top: 2rem; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
